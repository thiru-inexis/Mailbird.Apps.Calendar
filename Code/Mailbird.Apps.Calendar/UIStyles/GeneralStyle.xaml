<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Mailbird.Apps.Calendar.UIResources.Converters"
                    xmlns:evtConverters="clr-namespace:Mailbird.Apps.Calendar.UIResources.EventConverters"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:drawing="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>



    <converters:ListItemToViewTypeConverter x:Key="ListItemToViewTypeConverter"/>
    <converters:InvertBoolValueConverter x:Key="InvertBoolValueConverter"/>
    <converters:ColorToRGBStringConverter x:Key="ToRgbStringConverter"/>
    <converters:WebColorToColorConverter x:Key="WebColorToColorConverter"/>
    <converters:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:ObjectToVisibilityConverter x:Key="ObjToVisibilityConverter"/>
    <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
    <converters:StringToTimeSpanConverter x:Key="StringToTimeSpanConverter"/>
    <converters:EnumToStringConverter x:Key="EnumToStringConverter"/>
    <converters:CalenderViewToSchedulerViewConverter x:Key="CalenderViewToSchedulerViewConverter"/>
    <converters:BooleanToVisibilityConverter x:Key="InvertBoolToVisibilityConverter">
        <converters:InvertBoolValueConverter/>
    </converters:BooleanToVisibilityConverter>
    <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
    <converters:AppointmentStartEndTimeToShortStringConverter x:Key="AppointmentStartEndTimeToShortStringConverter"/>

    <evtConverters:KeyDownEventArgsConverter x:Key="KeyDownEventArgsConverter"/>
    <evtConverters:ListBoxItemClickEventArgsConverter x:Key="ListBoxItemClickEventArgsConverter"/>




    <!--Framework Base-->
    <FontFamily x:Key="Mc_DefaultFont">Segoe UI</FontFamily>
    <system:Double x:Key="Mc_DefaultFontSize">12</system:Double>
    <system:Double x:Key="Mc_LargeFontSize">16</system:Double>
    <Thickness x:Key="Mc_PaddingBase">2</Thickness>
    <BitmapImage x:Key="McUserProfileNoImage" UriSource="../UIResources/UserProfileNoImage.png" />

    <!--All elements base style-->
    <Style x:Key="McBaseControlStyle"  TargetType="{x:Type Control}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush1}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush2}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
    </Style>



    <Style x:Key="McSmallButtonStyleWrong" TargetType="{x:Type Button}" BasedOn="{StaticResource McBaseControlStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource AccentColorBrush3}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush4}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,5,15,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot" IsHitTestVisible="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NormalStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#33000000"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalStyle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedStyle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="NormalStyle" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" IsHitTestVisible="False">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates1">
                                    <VisualState x:Name="Normal1"/>
                                    <VisualState x:Name="MouseOver1"/>
                                    <VisualState x:Name="Pressed1"/>
                                    <VisualState x:Name="Disabled1"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBlock x:Name="textBlock" TextWrapping="NoWrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <Border x:Name="MouseOverStyle" Visibility="Collapsed" CornerRadius="2" Grid.RowSpan="1" Margin="0" Background="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <Border x:Name="border" CornerRadius="2" Padding="1">
                                <TextBlock x:Name="textBlockMouseOver" TextWrapping="NoWrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Background}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Border>
                        <Border x:Name="FocusedStyle" Visibility="Collapsed" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Grid.RowSpan="1" Margin="0" Background="{TemplateBinding BorderBrush}">
                            <TextBlock x:Name="textBlock_Copy1" TextWrapping="NoWrap" Text="{TemplateBinding Content}" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Background}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="McSmallButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource AccentColorBrush3}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush4}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="15,5,15,5"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"  Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush5}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush4}"/>
                            <Setter Property="Foreground" Value="{StaticResource AccentColorBrush3}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush3}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="McLargeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource McSmallButtonStyle}">
        <Setter Property="Padding" Value="25,10,25,10"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>


    <Style x:Key="McLabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="0 5 5 5"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="McAddQuestLabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>


    <Style x:Key="McTextInputControlStyle" TargetType="{x:Type dxe:TextEdit}" >
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>


    <Style x:Key="McSearchTextInputControlStyle" TargetType="{x:Type dxe:TextEdit}" BasedOn="{StaticResource McTextInputControlStyle}">
        <Setter Property="FontSize" Value="{StaticResource Mc_LargeFontSize}"/>
    </Style>

    

    <Style x:Key="McCheckBoxControlStyle" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="McComboInputControlStyle" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="McColorPickerInputControlStyle" TargetType="{x:Type dxe:PopupColorEdit}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>


    <Style x:Key="McDateEditStyle" TargetType="dxe:DateEdit">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="130"/>
        <Setter Property="MaskType" Value="DateTime"/>
        <Setter Property="Mask" Value="MMM-dd-yyyy"/>
        <Setter Property="DisplayFormatString" Value="MMM-dd-yyyy"/>
    </Style>

    <Style x:Key="McRadioButtonListItem" TargetType="{x:Type ListBoxItem}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <DockPanel LastChildFill="True" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
                        <RadioButton IsChecked="{TemplateBinding IsSelected}" Focusable="False" IsHitTestVisible="False" VerticalAlignment="Center" Margin="0,0,4,0" />

                        <ContentPresenter
                        Content             = "{TemplateBinding ContentControl.Content}"
                        ContentTemplate     = "{TemplateBinding ContentControl.ContentTemplate}"
                        ContentStringFormat = "{TemplateBinding ContentControl.ContentStringFormat}"
                        HorizontalAlignment = "{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment   = "{TemplateBinding Control.VerticalContentAlignment}"
                        SnapsToDevicePixels = "{TemplateBinding UIElement.SnapsToDevicePixels}" />

                    </DockPanel>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="McRadioButtonListBox" TargetType="ListBox">
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Padding" Value="0" />
            </Style>
        </Style.Resources>

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background"      Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource McRadioButtonListItem}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="McHorizontalRadioButtonListBox" BasedOn="{StaticResource McRadioButtonListBox}" TargetType="ListBox">
        <Setter Property="Margin" Value="0 6" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Background="Transparent" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--ListBoxEditItem-->
    <Style x:Key="McRadioListBoxControlStyle" TargetType="{x:Type dxe:ListBoxEdit}">
        <Setter Property="FontFamily" Value="{StaticResource Mc_DefaultFont}"/>
        <Setter Property="FontSize" Value="{StaticResource Mc_DefaultFontSize}"/>
        <Setter Property="Padding" Value="{StaticResource Mc_PaddingBase}"/>
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    
    <!--<dxe:ListBoxEdit Grid.Row="4" Grid.Column="1" 
                                 BorderThickness="5" BorderBrush="Aqua"
                                 Margin="5 5 0 5" VerticalAlignment="Stretch" Height="50"
                                 ItemsSource="{Binding Path=AvailableTransparencies}"
                                 SelectedItem="{Binding Path=SelectedTransparency}">-->

    <Style x:Key="SelectorViewStyle" TargetType="ListBox">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="3" BorderBrush="DarkGray" BorderThickness="1">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Width"
                            Value="80"/>

                    <Setter Property="Height"
                            Value="25"/>

                    <Setter Property="Padding" 
                            Value="3,0"/>

                    <Setter Property="HorizontalContentAlignment" 
                            Value="Center"/>

                    <Setter Property="FontFamily" 
                            Value="Arial"/>

                    <Setter Property="FontWeight"
                            Value="Bold"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="McGridBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>




    <Style x:Key="McMasterGrid" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="10 5 10 5"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="McInnerGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource McMasterGrid}">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="McInnerLeftGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource McInnerGrid}">
        <Setter Property="Margin" Value="0 5 5 5"/>
    </Style>
    <Style x:Key="McInnerTopGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource McInnerGrid}">
        <Setter Property="Margin" Value="5 0 5 5"/>
    </Style>
    <Style x:Key="McInnerRightGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource McInnerGrid}">
        <Setter Property="Margin" Value="5 5 0 5"/>
    </Style>
    <Style x:Key="McInnerBottomGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource McInnerGrid}">
        <Setter Property="Margin" Value="5 5 5 0"/>
    </Style>

    
    
    




    <Style x:Key="ComboBoxViewStyle" TargetType="dxe:ComboBoxEdit">
        <!--<Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>-->


        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <!--<Setter Property="Width" Value="80"/>
                    <Setter Property="Height" Value="25"/>-->
                    <!--<Setter Property="Padding" Value="3,0"/>-->
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <!--<Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="FontWeight" Value="Bold"/>-->
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedButton" 
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        
        <Setter Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="2" 
                            x:Name="border" 
                            BorderThickness="1" 
                            BorderBrush="Gray" 
                            UseLayoutRounding="True">
                        <ContentPresenter VerticalAlignment="Center" 
                                          HorizontalAlignment="Center" 
                                          x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity" 
                                    TargetName="border" 
                                    Value="0.5"/>
                            
                            <Setter Property="Opacity" 
                                    TargetName="border"
                                    Value="0.5"/>
                            
                            <Setter Property="Opacity" 
                                    TargetName="contentPresenter" 
                                    Value="0.5"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" 
                                 Value="True">
                            <Setter Property="RenderTransform" 
                                    TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.95" 
                                                        ScaleY="0.95"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" 
                                 Value="True">
                            <Setter Property="Background"
                                    Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DateSelectorStyle" 
           TargetType="dxe:DateEdit">
        <Setter Property="Margin" 
                Value="3"/>
        
        <Setter Property="ShowBorder" 
                Value="False"/>
        
        <Setter Property="AllowNullInput"
                Value="False"/>
        
        <Setter Property="AllowDefaultButton" 
                Value="False"/>
        
        <Setter Property="FontFamily" 
                Value="Arial Black"/>
        
        <Setter Property="FontSize" 
                Value="16"/>
        
        <Setter Property="Foreground" 
                Value="Gray"/>
        
        <Setter Property="IsTextEditable" 
                Value="False"/>
        
        <Setter Property="UseLayoutRounding" 
                Value="True"/>
        
        <Setter Property="MaskUseAsDisplayFormat"
                Value="True"/>
    </Style>
    
    <drawing:TimeSpanToDateTimeConverter x:Key="TimeSpanToDateTimeConverter"/>
    
    <drawing:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
    

    
</ResourceDictionary>